{"title":"Git的简单归纳","uid":"b7eae51efb7dc6d81a7837b0d6a16f52","slug":"Git简介","date":"2024-09-09T13:29:06.476Z","updated":"2024-09-09T14:24:05.228Z","comments":true,"path":"api/articles/Git简介.json","keywords":null,"cover":"https://datascientest.com/en/files/2024/03/GIT-datascientest.jpg","content":"<h1 id=\"Git的简单归纳\"><a href=\"#Git的简单归纳\" class=\"headerlink\" title=\"Git的简单归纳\"></a>Git的简单归纳</h1><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>内容修改自github博主arkingc，持续修改补充中</p></blockquote>\n<!-- GFM-TOC -->\n\n<ul>\n<li><a href=\"#%E4%B8%80git%E9%85%8D%E7%BD%AE\">一.git配置</a><ul>\n<li><a href=\"#1%E9%85%8D%E7%BD%AEgit%E7%94%A8%E6%88%B7%E5%90%8D%E5%92%8C%E9%82%AE%E7%AE%B1\">1.配置git用户名和邮箱</a></li>\n</ul>\n</li>\n<li><a href=\"#%E4%BA%8C%E4%BB%93%E5%BA%93\">二.仓库</a><ul>\n<li><a href=\"#1%E5%88%9B%E5%BB%BAgit%E4%BB%93%E5%BA%93\">1.创建git仓库</a></li>\n<li><a href=\"#2%E6%9F%A5%E7%9C%8B%E4%BB%93%E5%BA%93%E7%8A%B6%E6%80%81\">2.查看仓库状态</a></li>\n<li><a href=\"#3%E8%BF%9C%E7%A8%8B%E4%BB%93%E5%BA%93\">3.远程仓库</a></li>\n<li><a href=\"#4%E5%8D%8F%E5%90%8C%E5%B7%A5%E4%BD%9C\">4.协同工作</a></li>\n<li><a href=\"#5%E4%BD%BF%E7%94%A8github\">5.使用GitHub</a></li>\n</ul>\n</li>\n<li><a href=\"#%E4%B8%89%E7%89%88%E6%9C%AC%E6%8E%A7%E5%88%B6\">三.版本控制</a><ul>\n<li><a href=\"#1%E6%B7%BB%E5%8A%A0%E6%88%96%E5%88%A0%E9%99%A4%E4%BF%AE%E6%94%B9\">1.添加或删除修改</a></li>\n<li><a href=\"#2%E6%8F%90%E4%BA%A4%E7%89%88%E6%9C%AC\">2.提交版本</a></li>\n<li><a href=\"#3%E6%96%87%E4%BB%B6%E5%88%A0%E9%99%A4\">3.文件删除</a></li>\n<li><a href=\"#4%E5%B7%A5%E4%BD%9C%E7%8E%B0%E5%9C%BA%E4%BF%9D%E5%AD%98%E4%B8%8E%E6%81%A2%E5%A4%8D\">4.工作现场保存与恢复</a></li>\n<li><a href=\"#5%E6%94%B9%E5%8A%A8%E6%9F%A5%E8%AF%A2\">5.改动查询</a></li>\n<li><a href=\"#6%E7%89%88%E6%9C%AC%E5%9B%9E%E9%80%80\">6.版本回退</a></li>\n<li><a href=\"#7%E6%9F%A5%E7%9C%8B%E5%8E%86%E5%8F%B2%E6%8F%90%E4%BA%A4\">7.查看历史提交</a></li>\n</ul>\n</li>\n<li><a href=\"#%E5%9B%9B%E5%88%86%E6%94%AF%E7%AE%A1%E7%90%86\">四.分支管理</a><ul>\n<li><a href=\"#1%E5%88%9B%E5%BB%BA%E4%B8%8E%E5%90%88%E5%B9%B6%E5%88%86%E6%94%AF\">1.创建与合并分支</a></li>\n<li><a href=\"#2%E5%88%86%E6%94%AF%E5%90%88%E5%B9%B6%E5%86%B2%E7%AA%81\">2.分支合并冲突</a></li>\n<li><a href=\"#3%E5%88%86%E6%94%AF%E7%AE%A1%E7%90%86%E7%AD%96%E7%95%A5\">3.分支管理策略</a></li>\n</ul>\n</li>\n</ul>\n<!-- GFM-TOC -->\n\n<br>\n\n<h1 id=\"一-git配置\"><a href=\"#一-git配置\" class=\"headerlink\" title=\"一.git配置\"></a>一.git配置</h1><p>优先级：<code>--local &gt; --global &gt; --system</code></p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>用了<code>--global</code>这个参数，表示你这台机器上所有的Git仓库都会使用这个配置</p></blockquote>\n<h3 id=\"1-配置git用户名和邮箱\"><a href=\"#1-配置git用户名和邮箱\" class=\"headerlink\" title=\"1.配置git用户名和邮箱\"></a>1.配置git用户名和邮箱</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git config --global user.name        <span class=\"comment\"># 查看</span></span><br><span class=\"line\">git config --global user.name 用户名  <span class=\"comment\"># 修改</span></span><br><span class=\"line\">git config --global user.email       <span class=\"comment\"># 查看</span></span><br><span class=\"line\">git config --global user.email 邮箱   <span class=\"comment\"># 修改</span></span><br></pre></td></tr></table></figure>\n\n<br>\n\n<h1 id=\"二-仓库\"><a href=\"#二-仓库\" class=\"headerlink\" title=\"二.仓库\"></a>二.仓库</h1><h3 id=\"1-创建git仓库\"><a href=\"#1-创建git仓库\" class=\"headerlink\" title=\"1.创建git仓库\"></a>1.创建git仓库</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git init 仓库名  <span class=\"comment\">#创建一个git仓库</span></span><br><span class=\"line\">git init        <span class=\"comment\">#将一个项目转化为使用git管理（创建.git目录）</span></span><br></pre></td></tr></table></figure>\n\n<p>示例：</p>\n<p><img src=\"/pic/git-1.png\"></p>\n<p>目录结构：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">project</span><br><span class=\"line\">   |------.git</span><br><span class=\"line\">            |--------branches</span><br><span class=\"line\">            |--------config        <span class=\"comment\">#仓库的配置文件</span></span><br><span class=\"line\">            |--------description</span><br><span class=\"line\">            |--------HEAD</span><br><span class=\"line\">            |--------hooks</span><br><span class=\"line\">            |--------info</span><br><span class=\"line\">            |--------objects</span><br><span class=\"line\">            |--------refs</span><br></pre></td></tr></table></figure>\n\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>隐藏目录<code>.git</code>不算工作区，而是Git的版本库</p></blockquote>\n<h3 id=\"2-查看仓库状态\"><a href=\"#2-查看仓库状态\" class=\"headerlink\" title=\"2.查看仓库状态\"></a>2.查看仓库状态</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git status</span><br></pre></td></tr></table></figure>\n\n\n\n<h3 id=\"3-远程仓库\"><a href=\"#3-远程仓库\" class=\"headerlink\" title=\"3.远程仓库\"></a>3.远程仓库</h3><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>最早，肯定只有一台机器有一个原始版本库，此后，别的机器可以“克隆”这个原始版本库，而且每台机器的版本库其实都是一样的，并没有主次之分</p>\n<p>实际情况往往是这样，找一台电脑充当服务器的角色，每天24小时开机，其他每个人都从这个“服务器”仓库克隆一份到自己的电脑上，并且各自把各自的提交推送到服务器仓库里，也从服务器仓库中拉取别人的提交</p>\n<p>GitHub就是提供Git仓库托管服务的，所以，只要注册一个GitHub账号，就可以免费获得Git远程仓库，即Github为我们的git仓库提供了一个远程仓库，有了这个远程仓库，妈妈再也不用担心我的硬盘了</p></blockquote>\n<h4 id=\"1）为本地与GitHub的通信配置ssh\"><a href=\"#1）为本地与GitHub的通信配置ssh\" class=\"headerlink\" title=\"1）为本地与GitHub的通信配置ssh\"></a>1）为本地与GitHub的通信配置ssh</h4><p><strong>本地git仓库和GitHub上的远程仓库之间的传输是通过SSH加密的，所以，需要一点设置</strong>：</p>\n<ol>\n<li><strong>创建ssh key</strong>： <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssh-keygen -t rsa -C <span class=\"string\">&quot;youremail@example.com&quot;</span></span><br></pre></td></tr></table></figure></li>\n<li><strong>登录你的GitHub帐号，<code>Settings -&gt; SSH and GPG keys -&gt; new SSH key</code> ，将id_rsa.pub的内容复制进去</strong></li>\n</ol>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>为什么GitHub需要SSH Key呢？因为GitHub需要识别出你推送的提交确实是你推送的，而不是别人冒充的，而Git支持SSH协议，所以，GitHub只要知道了你的公钥，就可以确认只有你自己才能推送</p></blockquote>\n<h4 id=\"2）让本地git仓库和远程仓库同步\"><a href=\"#2）让本地git仓库和远程仓库同步\" class=\"headerlink\" title=\"2）让本地git仓库和远程仓库同步\"></a>2）让本地git仓库和远程仓库同步</h4><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>在有了本地git仓库后，还需创建对应的远程仓库</p></blockquote>\n<ol>\n<li><strong>在GitHub上创建远程仓库</strong>（如果已有则省略）</li>\n<li><strong>为本地仓库设置远程仓库信息</strong>（如果同时需要为本地仓库添加多个远程仓库（如果github+码云），则可以将<code>origin</code>分别换成<code>github</code>和<code>gitee</code>，推送操作时也要修改<code>origin</code>。添加后，远程库的名字就是<code>origin</code>，这是Git默认的叫法，也可以改成别的，但是<code>origin</code>这个名字一看就知道是远程库） <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git remote add origin https://github.com/用户名/仓库名</span><br></pre></td></tr></table></figure>\n<ul>\n<li><strong>删除本地仓库的远程仓库信息</strong>：<code>git remote remove origin</code></li>\n<li><strong>修改远端地址</strong>：<code>git remote set-url 新地址</code></li>\n<li><strong>查看远程仓库信息</strong>：<code>git remote -v</code></li>\n</ul>\n</li>\n<li><strong>将本地git仓库push到远程仓库</strong> <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 由于远程库是空的，我们第一次推送master分支时，加上了-u参数,Git不但会把本地的</span></span><br><span class=\"line\"><span class=\"comment\"># master分支内容推送的远程新的master分支，还会把本地的master分支和远程的master</span></span><br><span class=\"line\"><span class=\"comment\"># 分支关联起来，在以后的推送或者拉取时就可以简化命令</span></span><br><span class=\"line\">git push [-u] origin 分支名</span><br></pre></td></tr></table></figure></li>\n</ol>\n<p>并不是一定要把本地分支往远程推送。哪些分支需要推送、哪些不需要呢？</p>\n<ul>\n<li><code>master</code>：主分支，要时刻与远程同步</li>\n<li><code>dev</code>：开发分支，团队所有成员都需要在上面工作，所有也需要与远程同步</li>\n<li><code>bug</code>：只用于在本地修复bug，就没必要推送到远程了，除非老板要看看你每周修复了几个bug</li>\n</ul>\n<h3 id=\"4-协同工作\"><a href=\"#4-协同工作\" class=\"headerlink\" title=\"4.协同工作\"></a>4.协同工作</h3><p>拉取分支：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git pull</span><br></pre></td></tr></table></figure>\n\n<p><code>git clone</code>时，默认情况下只能看到本地的<code>master</code>分支。如果要在<code>dev</code>分支上开发，就必须创建远程<code>origin</code>的<code>dev</code>分支到本地，可以使用如下命令创建本地<code>dev</code>分支：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git checkout -b dev</span><br></pre></td></tr></table></figure>\n\n<p>将本地<code>dev</code>分支与远程<code>origin/dev</code>分支关联起来：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git branch --set-upstream dev origin/dev</span><br></pre></td></tr></table></figure>\n\n\n\n<h3 id=\"5-使用GitHub\"><a href=\"#5-使用GitHub\" class=\"headerlink\" title=\"5.使用GitHub\"></a>5.使用GitHub</h3><p>Bootstrap的官方仓库twbs&#x2F;bootstrap、你在GitHub上克隆的仓库my&#x2F;bootstrap，以及你自己克隆到本地电脑的仓库，他们的关系就像下图显示的那样：</p>\n<p><img src=\"/../pic/git-2.png\"></p>\n<p>如果你想修复bootstrap的一个bug，或者新增一个功能，立刻就可以开始干活，干完后，往自己的仓库推送</p>\n<p><strong>如果你希望bootstrap的官方库能接受你的修改，你就可以在GitHub上发起一个pull request。当然，对方是否接受你的pull request就不一定了</strong></p>\n<br>\n\n\n\n<h1 id=\"三-版本控制\"><a href=\"#三-版本控制\" class=\"headerlink\" title=\"三.版本控制\"></a>三.版本控制</h1><p>隐藏目录<code>.git</code>不算工作区，而是Git的版本库。版本库里存了很多东西，其中最重要的就是<strong>称为stage（或者叫index）的暂存区</strong>。还有Git为我们自动创建的第一个分支<code>master</code>，以及指向<code>master</code>的一个指针叫<code>HEAD</code></p>\n<p><img src=\"/pic/git-3.png\"></p>\n<h3 id=\"1-添加或删除修改\"><a href=\"#1-添加或删除修改\" class=\"headerlink\" title=\"1.添加或删除修改\"></a>1.添加或删除修改</h3><p>将修改添加到暂存区：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git add 文件/目录</span><br></pre></td></tr></table></figure>\n\n<p>从暂存区删除修改：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git <span class=\"built_in\">rm</span> --cached 文件/目录</span><br></pre></td></tr></table></figure>\n\n<p>以下命令可以将暂存区的修改重置，暂存区的改变会被移除到工作区：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git reset HEAD [文件名]</span><br></pre></td></tr></table></figure>\n\n<p>以下命令可以丢弃工作区的修改：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git checkout -- [文件名]</span><br></pre></td></tr></table></figure>\n\n<p>如果刚对一个文件进行了编辑，可以撤销文件的改变，回到编辑开始。命令其实起到“一键恢复”的作用，还可用于“误删恢复”。可以在 <code>git reset HEAD [文件名]</code> 后使用</p>\n<h3 id=\"2-提交版本\"><a href=\"#2-提交版本\" class=\"headerlink\" title=\"2.提交版本\"></a>2.提交版本</h3><p>如果修改了readme.txt，添加了文件LICENSE，并将2者添加到暂存区后，暂存区的状态就变成这样：</p>\n<p><img src=\"/pic/git-4.png\"></p>\n<p>使用commit提交修改，实际上就是把暂存区的所有内容提交到当前分支：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git commit -m <span class=\"string\">&#x27;信息&#x27;</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/pic/git-5.png\"></p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>commit相当于游戏里面一次存档。对应一个版本</p></blockquote>\n<h3 id=\"3-文件删除\"><a href=\"#3-文件删除\" class=\"headerlink\" title=\"3.文件删除\"></a>3.文件删除</h3><p><code>rm</code>做出的删除不会被暂存，<code>git rm</code>做出的改变会被暂存。如果使用<code>rm</code>删除掉，能使用<code>git rm</code>来暂存。<code>git rm</code>不在意文件已经不存在了</p>\n<ul>\n<li><p>删除(暂存)单个文件</p>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git <span class=\"built_in\">rm</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>删除(暂存)多个文件（一般情况下，更可能是对大量文件进行管理。可能同时会删除很多文件，不可能使用<code>git rm</code>一个个删除）</p>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 它会变量当前目录，将所有删除暂存</span></span><br><span class=\"line\">git add -u .</span><br></pre></td></tr></table></figure></li>\n</ul>\n<p>如果有文件被误删，可以使用<code>git checkout -- 文件名</code>恢复</p>\n<h3 id=\"4-工作现场保存与恢复\"><a href=\"#4-工作现场保存与恢复\" class=\"headerlink\" title=\"4.工作现场保存与恢复\"></a>4.工作现场保存与恢复</h3><p>有时候在修复bug或某项任务还未完成，但是需要紧急处理另外一个问题。此时可以先保存工作现场，当问题处理完成后，再恢复bug或任务的进度</p>\n<ul>\n<li>保存工作现场：<code>git stash</code></li>\n<li>查看保存的工作现场：<code>git stash list</code></li>\n<li>恢复工作现场：<code>git stash apply</code></li>\n<li>删除stash内容：<code>git stash drop</code></li>\n<li>恢复工作现场并删除stash内容（相当于上面2步合并）：<code>git stash pop</code></li>\n</ul>\n<h3 id=\"5-改动查询\"><a href=\"#5-改动查询\" class=\"headerlink\" title=\"5.改动查询\"></a>5.改动查询</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git diff [选项]           <span class=\"comment\"># 查看工作区中的修改</span></span><br><span class=\"line\">git diff [选项] --staged   <span class=\"comment\"># 查看已添加到暂存区的修改</span></span><br><span class=\"line\">git diff [选项] HEAD       <span class=\"comment\"># 查看当前所有未提交的修改</span></span><br><span class=\"line\"></span><br><span class=\"line\">选项：</span><br><span class=\"line\">    --color-words： 颜色</span><br><span class=\"line\">    --<span class=\"built_in\">stat</span>：        不显示具体修改，只显示修改了的文件</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"6-版本回退\"><a href=\"#6-版本回退\" class=\"headerlink\" title=\"6.版本回退\"></a>6.版本回退</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git reset --hard 版本ID/HEAD形式的版本</span><br><span class=\"line\"></span><br><span class=\"line\">git reset --hard HEAD      <span class=\"comment\"># 当前版本</span></span><br><span class=\"line\">git reset --hard HEAD^     <span class=\"comment\"># 上一个版本</span></span><br><span class=\"line\">git reset --hard HEAD^^    <span class=\"comment\"># 上上个版本</span></span><br><span class=\"line\">git reset --hard HEAD~n    <span class=\"comment\"># 前n个版本</span></span><br></pre></td></tr></table></figure>\n\n<p>如果回到过去的版本，想要回到原来新的版本：</p>\n<ul>\n<li>如果终端未关，可以找到新版本的id，通过上述命令回去新版本</li>\n<li>如果终端已关，<code>git reflog</code>查看版本，再通过上述命令回去新版本</li>\n</ul>\n<h3 id=\"7-查看历史提交\"><a href=\"#7-查看历史提交\" class=\"headerlink\" title=\"7.查看历史提交\"></a>7.查看历史提交</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git <span class=\"built_in\">log</span> [选项]</span><br><span class=\"line\"></span><br><span class=\"line\">选项：</span><br><span class=\"line\">    --online：只显示提交提示信息</span><br><span class=\"line\">    --<span class=\"built_in\">stat</span>：添加每次提交包含的文件信息</span><br><span class=\"line\">    --path：查看每次提交改变的内容</span><br><span class=\"line\">    --graph</span><br></pre></td></tr></table></figure>\n\n<p><strong>加文件名可以显示具体文件相关的所有提交信息</strong></p>\n<br>\n\n<h1 id=\"四-分支管理\"><a href=\"#四-分支管理\" class=\"headerlink\" title=\"四.分支管理\"></a>四.分支管理</h1><h3 id=\"1-创建与合并分支\"><a href=\"#1-创建与合并分支\" class=\"headerlink\" title=\"1.创建与合并分支\"></a>1.创建与合并分支</h3><p>每次<code>commit</code>相当于一次存档，对应一个版本。Git都把它们串成一条时间线，这条时间线就是一个分支。<code>master</code>就是主分支。<code>HEAD</code>指向当前分支，而<code>master</code>指向主分支的最近提交。每次提交，<code>master</code>分支都会向前移动一步</p>\n<p>当创建一个分支时，如<code>dev</code>，Git创建一个指针<code>dev</code>，指向<code>master</code>相同的提交，再把<code>HEAD</code>指向<code>dev</code>，就表示当前分支在<code>dev</code>上：</p>\n<div align=\"center\"> <img src=\"/pic/git-6.png\" width=\"60%\" height=\"60%\"/> </div>\n\n<p>从现在开始，对工作区的修改和提交就是针对<code>dev</code>分支了，比如新提交一次后，<code>dev</code>指针往前移动一步，而<code>master</code>指针不变：</p>\n<div align=\"center\"> <img src=\"/pic/git-7.png\" width=\"70%\" height=\"70%\"/> </div>\n\n<p>假如我们在<code>dev</code>上的工作完成了，就可以把<code>dev</code>合并到<code>master</code>上。最简单的方法，就是直接把<code>master</code>指向<code>dev</code>的当前提交，就完成了合并：</p>\n<div align=\"center\"> <img src=\"/pic/git-8.png\" width=\"70%\" height=\"70%\"/> </div>\n\n<p>合并完分支后，甚至可以删除<code>dev</code>分支。删除<code>dev</code>分支就是把<code>dev</code>指针给删掉，删掉后，我们就剩下了一条<code>master</code>分支：</p>\n<div align=\"center\"> <img src=\"/pic/git-9.png\" width=\"70%\" height=\"70%\"/> </div>\n\n<p>上面的合并使用的是<strong>Fast forward</strong>。这种模式下，删除分支后，会丢掉分支信息。如果要强制禁用<strong>Fast forward</strong>模式，Git就会在merge时生成一个新的提交，这样，从分支历史上就可以看出分支信息。通过在<code>git merge</code>命令中使用<code>--no-ff</code>选项禁用<strong>Fast forward</strong>模式。比如在合并<code>dev</code>时：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git merge --no-ff -m <span class=\"string\">&quot;merge with no-ff&quot;</span> dev</span><br></pre></td></tr></table></figure>\n\n<p>由于会生成一个新的提交，所以需要使用<code>-m</code>指明新提交的信息。此时分支情况如下：</p>\n<div align=\"center\"> <img src=\"/pic/git-12.png\" width=\"70%\" height=\"70%\"/> </div>\n\n<p>相关命令如下：</p>\n<ul>\n<li>(创建分支并)切换到新分支：<code>git checkout -b 新分支</code></li>\n<li>创建分支：<code>git branch 新分支</code></li>\n<li>切换分支：<code>git checkout 欲切换到的分支</code></li>\n<li>查看当前分支：<code>git branch</code></li>\n<li>合并某分支到当前分支：<code>git merge 欲合并到当前分支的分支</code></li>\n<li>查看历史分支情况：<code>git log --graph --pretty=oneline --abbrev-commit</code></li>\n<li>删除未合并的分支：<code>git branch -D 分支</code></li>\n</ul>\n<h3 id=\"2-分支合并冲突\"><a href=\"#2-分支合并冲突\" class=\"headerlink\" title=\"2.分支合并冲突\"></a>2.分支合并冲突</h3><p>如果两个分支修改了同一文件，合并时会发生冲突。比如<code>master</code>分支和<code>feature1</code>分支都修改了<code>readme.txt</code>文件，各自都有新的提交：</p>\n<div align=\"center\"> <img src=\"/pic/git-10.png\" width=\"70%\" height=\"70%\"/> </div>\n\n<p>这种情况下，Git无法执行“快速合并”，只能试图把各自的修改合并起来，但这种合并就可能会有冲突。此时<code>readme.txt</code>文件会变成如下形式：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Git is a distributed version control system.</span><br><span class=\"line\">Git is free software distributed under the GPL.</span><br><span class=\"line\">Git has a mutable index called stage.</span><br><span class=\"line\">Git tracks changes of files.</span><br><span class=\"line\">&lt;&lt;&lt;&lt;&lt;&lt;&lt; HEAD</span><br><span class=\"line\">Creating a new branch is quick &amp; simple.</span><br><span class=\"line\">=======</span><br><span class=\"line\">Creating a new branch is quick AND simple.</span><br><span class=\"line\">&gt;&gt;&gt;&gt;&gt;&gt;&gt; feature1</span><br></pre></td></tr></table></figure>\n\n<p>Git用<code>&lt;&lt;&lt;&lt;&lt;&lt;&lt;</code>，<code>=======</code>，<code>&gt;&gt;&gt;&gt;&gt;&gt;&gt;</code>标记出不同分支的内容，此时需要手动修改后保存。然后再使用<code>git commit</code>进行一次提交。分支会变成如下：</p>\n<div align=\"center\"> <img src=\"/pic/git-11.png\" width=\"70%\" height=\"70%\"/> </div>\n\n<h3 id=\"3-分支管理策略\"><a href=\"#3-分支管理策略\" class=\"headerlink\" title=\"3.分支管理策略\"></a>3.分支管理策略</h3><p>在实际开发中，我们应该按照几个基本原则进行分支管理</p>\n<p>首先，<code>master</code>分支应该是非常稳定的，也就是仅用来发布新版本，平时不能在上面干活</p>\n<p>干活都在<code>dev</code>分支上，也就是说，<code>dev</code>分支是不稳定的，到某个时候，比如1.0版本发布时，再把<code>dev</code>分支合并到<code>master</code>上，在<code>master</code>分支发布1.0版本</p>\n<p>你和你的小伙伴们每个人都在<code>dev</code>分支上干活，每个人都有自己的分支，时不时地往<code>dev</code>分支上合并就可以了</p>\n<p>所以，团队合作的分支看起来就像这样：</p>\n<div align=\"center\"> <img src=\"/pic/git-13.png\" width=\"70%\" height=\"70%\"/> </div>\n\n<p>当你从远程仓库克隆时，实际上Git自动把本地的<code>master</code>分支和远程的<code>master</code>分支对应起来了，并且，远程仓库的默认名称是<code>origin</code></p>\n<p>要查看远程库的信息，用<code>git remote</code>：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git remote</span><br><span class=\"line\">origin</span><br></pre></td></tr></table></figure>\n\n<p>或者，用<code>git remote -v</code>显示更详细的信息：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git remote -v</span><br><span class=\"line\">origin  git@github.com:michaelliao/learngit.git (fetch)</span><br><span class=\"line\">origin  git@github.com:michaelliao/learngit.git (push)</span><br></pre></td></tr></table></figure>\n\n<p>上面显示了可以抓取和推送的<code>origin</code>的地址。如果没有推送权限，就看不到push的地址</p>\n<h4 id=\"推送分支\"><a href=\"#推送分支\" class=\"headerlink\" title=\"推送分支\"></a>推送分支</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git push origin 欲推送的分支</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><code>master</code>分支是主分支，因此要时刻与远程同步</li>\n<li><code>dev</code>分支是开发分支，团队所有成员都需要在上面工作，所以也需要与远程同步</li>\n<li><code>bug</code>分支只用于在本地修复bug，就没必要推到远程了，除非老板要看看你每周到底修复了几个bug</li>\n<li><code>feature</code>分支是否推到远程，取决于你是否和你的小伙伴合作在上面开发</li>\n</ul>\n","feature":true,"text":"Git的简单归纳 内容修改自github博主arkingc，持续修改补充中 一.git配置 1.配置git用户名和邮箱 二.仓库 1.创建git仓库 2.查看仓...","permalink":"/post/Git简介","photos":[],"count_time":{"symbolsCount":"6.5k","symbolsTime":"6 mins."},"categories":[{"name":"Git","slug":"Git","count":1,"path":"api/categories/Git.json"}],"tags":[{"name":"git简介","slug":"git简介","count":1,"path":"api/tags/git简介.json"},{"name":"git简单使用","slug":"git简单使用","count":1,"path":"api/tags/git简单使用.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#Git%E7%9A%84%E7%AE%80%E5%8D%95%E5%BD%92%E7%BA%B3\"><span class=\"toc-text\">Git的简单归纳</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E4%B8%80-git%E9%85%8D%E7%BD%AE\"><span class=\"toc-text\">一.git配置</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-%E9%85%8D%E7%BD%AEgit%E7%94%A8%E6%88%B7%E5%90%8D%E5%92%8C%E9%82%AE%E7%AE%B1\"><span class=\"toc-text\">1.配置git用户名和邮箱</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E4%BA%8C-%E4%BB%93%E5%BA%93\"><span class=\"toc-text\">二.仓库</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-%E5%88%9B%E5%BB%BAgit%E4%BB%93%E5%BA%93\"><span class=\"toc-text\">1.创建git仓库</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-%E6%9F%A5%E7%9C%8B%E4%BB%93%E5%BA%93%E7%8A%B6%E6%80%81\"><span class=\"toc-text\">2.查看仓库状态</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3-%E8%BF%9C%E7%A8%8B%E4%BB%93%E5%BA%93\"><span class=\"toc-text\">3.远程仓库</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#1%EF%BC%89%E4%B8%BA%E6%9C%AC%E5%9C%B0%E4%B8%8EGitHub%E7%9A%84%E9%80%9A%E4%BF%A1%E9%85%8D%E7%BD%AEssh\"><span class=\"toc-text\">1）为本地与GitHub的通信配置ssh</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#2%EF%BC%89%E8%AE%A9%E6%9C%AC%E5%9C%B0git%E4%BB%93%E5%BA%93%E5%92%8C%E8%BF%9C%E7%A8%8B%E4%BB%93%E5%BA%93%E5%90%8C%E6%AD%A5\"><span class=\"toc-text\">2）让本地git仓库和远程仓库同步</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#4-%E5%8D%8F%E5%90%8C%E5%B7%A5%E4%BD%9C\"><span class=\"toc-text\">4.协同工作</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#5-%E4%BD%BF%E7%94%A8GitHub\"><span class=\"toc-text\">5.使用GitHub</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E4%B8%89-%E7%89%88%E6%9C%AC%E6%8E%A7%E5%88%B6\"><span class=\"toc-text\">三.版本控制</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-%E6%B7%BB%E5%8A%A0%E6%88%96%E5%88%A0%E9%99%A4%E4%BF%AE%E6%94%B9\"><span class=\"toc-text\">1.添加或删除修改</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-%E6%8F%90%E4%BA%A4%E7%89%88%E6%9C%AC\"><span class=\"toc-text\">2.提交版本</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3-%E6%96%87%E4%BB%B6%E5%88%A0%E9%99%A4\"><span class=\"toc-text\">3.文件删除</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#4-%E5%B7%A5%E4%BD%9C%E7%8E%B0%E5%9C%BA%E4%BF%9D%E5%AD%98%E4%B8%8E%E6%81%A2%E5%A4%8D\"><span class=\"toc-text\">4.工作现场保存与恢复</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#5-%E6%94%B9%E5%8A%A8%E6%9F%A5%E8%AF%A2\"><span class=\"toc-text\">5.改动查询</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#6-%E7%89%88%E6%9C%AC%E5%9B%9E%E9%80%80\"><span class=\"toc-text\">6.版本回退</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#7-%E6%9F%A5%E7%9C%8B%E5%8E%86%E5%8F%B2%E6%8F%90%E4%BA%A4\"><span class=\"toc-text\">7.查看历史提交</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%9B%9B-%E5%88%86%E6%94%AF%E7%AE%A1%E7%90%86\"><span class=\"toc-text\">四.分支管理</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-%E5%88%9B%E5%BB%BA%E4%B8%8E%E5%90%88%E5%B9%B6%E5%88%86%E6%94%AF\"><span class=\"toc-text\">1.创建与合并分支</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-%E5%88%86%E6%94%AF%E5%90%88%E5%B9%B6%E5%86%B2%E7%AA%81\"><span class=\"toc-text\">2.分支合并冲突</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3-%E5%88%86%E6%94%AF%E7%AE%A1%E7%90%86%E7%AD%96%E7%95%A5\"><span class=\"toc-text\">3.分支管理策略</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%8E%A8%E9%80%81%E5%88%86%E6%94%AF\"><span class=\"toc-text\">推送分支</span></a></li></ol></li></ol></li></ol></li></ol>","author":{"name":"神秘奇男子","slug":"blog-author","avatar":"https://i.ibb.co/b3C0QpT/584-2022101195826670.jpg","link":"/","description":"回不去的、留不下的，对你的回忆","socials":{"github":"https://github.com/August618?tab=repositories","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"https://www.zhihu.com/people/august121wsy","csdn":"https://blog.csdn.net/UPCAUG?spm=1011.2124.3001.5343","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/1931947622/favlist?fid=1765359122"},"Gitee":{"icon":"/svg/gitee.svg","link":"https://gitee.com/wu-shanyu-AUG"}}}},"mapped":true,"hidden":false,"prev_post":{"title":"MybatisPlus入门","uid":"f50948573c1bc1468571d16f17cedea9","slug":"MybatisPlus","date":"2024-09-20T12:19:36.839Z","updated":"2024-09-20T12:51:52.808Z","comments":true,"path":"api/articles/MybatisPlus.json","keywords":null,"cover":"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQ_t6KLyzOoKv3ViOi4e1PeC6GGX3N1Mc13-A&s","text":"MybatisPlus入门,它的愿景是成为 MyBatis 最好的搭档，就像魂斗罗 中的 1P、2P，基友搭配，效率翻倍。...","permalink":"/post/MybatisPlus","photos":[],"count_time":{"symbolsCount":"46k","symbolsTime":"42 mins."},"categories":[{"name":"SpringCloud","slug":"SpringCloud","count":1,"path":"api/categories/SpringCloud.json"}],"tags":[{"name":"java后端","slug":"java后端","count":1,"path":"api/tags/java后端.json"},{"name":"MybatisPlus","slug":"MybatisPlus","count":1,"path":"api/tags/MybatisPlus.json"}],"author":{"name":"神秘奇男子","slug":"blog-author","avatar":"https://i.ibb.co/b3C0QpT/584-2022101195826670.jpg","link":"/","description":"回不去的、留不下的，对你的回忆","socials":{"github":"https://github.com/August618?tab=repositories","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"https://www.zhihu.com/people/august121wsy","csdn":"https://blog.csdn.net/UPCAUG?spm=1011.2124.3001.5343","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/1931947622/favlist?fid=1765359122"},"Gitee":{"icon":"/svg/gitee.svg","link":"https://gitee.com/wu-shanyu-AUG"}}}},"feature":true},"next_post":{"title":"Linux常用命令-2","uid":"6567def797e3574f535ec70b74f4992c","slug":"Linux课程笔记","date":"2024-09-09T14:32:36.513Z","updated":"2024-09-09T14:43:50.743Z","comments":true,"path":"api/articles/Linux课程笔记.json","keywords":null,"cover":"https://th.bing.com/th/id/OIP.z4buo6GLXsTVWBDk0bJbEQHaEK?w=287&h=180&c=7&r=0&o=5&dpr=1.4&pid=1.7","text":"Linux常用命令-2 转载修改自黑马Linux学习笔记，持续修改补充中 Linux的目录结构 /，根目录是最顶级的目录了 Linux只有一个顶级目录：/ 路径...","permalink":"/post/Linux课程笔记","photos":[],"count_time":{"symbolsCount":"5.7k","symbolsTime":"5 mins."},"categories":[{"name":"Linux","slug":"Linux","count":2,"path":"api/categories/Linux.json"}],"tags":[{"name":"常用操作","slug":"常用操作","count":1,"path":"api/tags/常用操作.json"}],"author":{"name":"神秘奇男子","slug":"blog-author","avatar":"https://i.ibb.co/b3C0QpT/584-2022101195826670.jpg","link":"/","description":"回不去的、留不下的，对你的回忆","socials":{"github":"https://github.com/August618?tab=repositories","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"https://www.zhihu.com/people/august121wsy","csdn":"https://blog.csdn.net/UPCAUG?spm=1011.2124.3001.5343","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/1931947622/favlist?fid=1765359122"},"Gitee":{"icon":"/svg/gitee.svg","link":"https://gitee.com/wu-shanyu-AUG"}}}},"feature":false}}