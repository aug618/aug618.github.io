{"title":"显著性图像的生成","uid":"437805e2a7be277a0e267cf9ba092ccb","slug":"应用神经网络生成显著性图","date":"2024-11-02T00:27:59.922Z","updated":"2024-11-04T11:24:04.792Z","comments":true,"path":"api/articles/应用神经网络生成显著性图.json","keywords":null,"cover":"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSuFLSCpWMMRTaXuI_IUtTPGla20OCtuVXYGg&s","content":"<h1 id=\"应用神经网络生成显著性图\"><a href=\"#应用神经网络生成显著性图\" class=\"headerlink\" title=\"应用神经网络生成显著性图\"></a>应用神经网络生成显著性图</h1><h2 id=\"一、整体思路流程\"><a href=\"#一、整体思路流程\" class=\"headerlink\" title=\"一、整体思路流程\"></a>一、整体思路流程</h2><ol>\n<li><strong>超像素分割：</strong>首先对图像进行SLIC超像素分割。</li>\n<li><strong>特征提取：</strong>然后对每个超像素进行颜色直方图特征向量提取，同时围绕超像素取一大一小俩个矩形框，中心点不变，对矩阵框取HOG特征向量。将超像素颜色直方图特征向量、两个矩阵框的的HOG的特征向量(这3个不同尺度的向量)合成高维向量，作为该超像素的特征向量。</li>\n<li><strong>训练神经网络：</strong>训练一个对应的二分类神经网络用于判断每个超像素是否是显著的。（1显著、0不显著）。</li>\n<li><strong>生成显著性图像：</strong>然后组合的高维特征向量交给神经网络二分类输出，判断每个超像素是否是显著的，输出处理后的显著性二值图。</li>\n<li><strong>基于多尺度的优化策略：</strong>基于上述同样的策略，我们改变SLIC划分的超像素的尺度大小，在三种尺度下训练三个神经网络，然后将三个尺度对应的显著图结果取平均值，即可生成更精准的显著性二值图。</li>\n</ol>\n<p>下面是具体的实现思路，结合超像素分割、特征提取、神经网络训练和显著性图像生成：</p>\n<h2 id=\"二、具体实现流程\"><a href=\"#二、具体实现流程\" class=\"headerlink\" title=\"二、具体实现流程\"></a>二、具体实现流程</h2><h3 id=\"2-1-超像素分割\"><a href=\"#2-1-超像素分割\" class=\"headerlink\" title=\"2.1. 超像素分割\"></a>2.1. 超像素分割</h3><div class=\"custom-quote tip\">\n<span class=\"custom-quote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M20.86 14.13C20 14.7 19.56 15.74 19.77 16.76C20.13 18.55 18.55 20.13 16.76 19.77C15.74 19.57 14.7 20 14.13 20.86C13.12 22.38 10.89 22.38 9.88 20.86C9.3 20 8.26 19.56 7.24 19.77C5.45 20.13 3.87 18.55 4.23 16.76C4.43 15.74 4 14.7 3.14 14.13C1.62 13.12 1.62 10.89 3.14 9.88C4 9.3 4.44 8.26 4.23 7.24C3.87 5.45 5.45 3.87 7.24 4.23C8.26 4.44 9.3 4 9.87 3.14C10.88 1.62 13.11 1.62 14.12 3.14C14.7 4 15.74 4.44 16.76 4.23C18.55 3.87 20.13 5.45 19.77 7.24C19.56 8.26 20 9.3 20.86 9.87C22.38 10.88 22.38 13.12 20.86 14.13Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M12.01 15C12.01 14.5 12.01 14.5 12.01 14.5C12.04 13.75 13 13.46 14.04 12.2C14.41 11.74 14.69 11.41 14.86 10.85C15.15 9.95 14.92 9.18 14.86 9.02C14.8 8.79 14.52 8 13.72 7.46C13.06 7.02 12.42 7 12.14 7C11.9 7 11.36 7 10.78 7.3C10.28 7.56 9.98 7.9 9.83 8.1C9.24 8.82 9.06 9.63 9 10.06\"></path>\n<path stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M11.99 18H12.01\"></path>\n</svg></span>\n<p class=\"custom-quote-title\">注意</p>\n<p>​    使用SLIC算法对输入图像进行超像素分割，该算法会将图像划分为多个超像素区域，使得每个区域内的像素具有相似的颜色或纹理特征。<strong>指定算法参数n_segments&#x3D;100、compactness&#x3D;10</strong>，前者表示希望生成的超像素大约在100个，后者控制超像素形状的紧凑程度。值越大，超像素越接近圆形或正方形；值越小，超像素越倾向于沿着图像中的颜色边界形成不规则形状。SLIC分割的数据集的一张图像如下所示：</p>\n\n</div>\n<p><img src=\"/images/4-1.png\" alt=\"4-1\"></p>\n<h3 id=\"2-2-特征提取\"><a href=\"#2-2-特征提取\" class=\"headerlink\" title=\"2.2. 特征提取\"></a>2.2. 特征提取</h3><ol>\n<li>使用 np.histogram 函数计算超像素的颜色直方图，划分32个颜色值区间。</li>\n<li>定义两个矩形框：一个大框一个小框，均以超像素的中心点为中心，但大小不同，我选择的是一个是超像素大小的1.15倍，一个是超像素的1.75倍，对于每个矩形框，计算矩形框内的 HOG 特征。取一个超像素绘制矩形框如图所示：<br><img src=\"/images/4-2.png\" alt=\"4-2\"></li>\n<li>将超像素颜色直方图的特征和两个矩阵框的HOG特征向量使用函数np.concatenate结合，形成一个高维特征向量。这为每个超像素提供多尺度的特征表达。对于上述的图像，生成的feature如图所示：<br><img src=\"/images/4-3.png\" alt=\"4-3\"><br><strong>上述整个图片的每个超像素的特征形状与总超像素打印的结果：</strong><br><img src=\"/images/4-4.png\" alt=\"4-4\"></li>\n</ol>\n<h3 id=\"2-3-训练神经网络\"><a href=\"#2-3-训练神经网络\" class=\"headerlink\" title=\"2.3. 训练神经网络\"></a>2.3. 训练神经网络</h3><h4 id=\"1-数据准备：\"><a href=\"#1-数据准备：\" class=\"headerlink\" title=\"1.数据准备：\"></a>1.数据准备：</h4><ul>\n<li>在网上搜集了共2000张原图像和对于的显著性二值图像用于训练，但避免计算量太大，故只选了500张用于训练：<br> <img src=\"/images/4-5.png\" alt=\"4-5\"></li>\n</ul>\n<div class=\"custom-quote tip\">\n<span class=\"custom-quote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M20.86 14.13C20 14.7 19.56 15.74 19.77 16.76C20.13 18.55 18.55 20.13 16.76 19.77C15.74 19.57 14.7 20 14.13 20.86C13.12 22.38 10.89 22.38 9.88 20.86C9.3 20 8.26 19.56 7.24 19.77C5.45 20.13 3.87 18.55 4.23 16.76C4.43 15.74 4 14.7 3.14 14.13C1.62 13.12 1.62 10.89 3.14 9.88C4 9.3 4.44 8.26 4.23 7.24C3.87 5.45 5.45 3.87 7.24 4.23C8.26 4.44 9.3 4 9.87 3.14C10.88 1.62 13.11 1.62 14.12 3.14C14.7 4 15.74 4.44 16.76 4.23C18.55 3.87 20.13 5.45 19.77 7.24C19.56 8.26 20 9.3 20.86 9.87C22.38 10.88 22.38 13.12 20.86 14.13Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M12.01 15C12.01 14.5 12.01 14.5 12.01 14.5C12.04 13.75 13 13.46 14.04 12.2C14.41 11.74 14.69 11.41 14.86 10.85C15.15 9.95 14.92 9.18 14.86 9.02C14.8 8.79 14.52 8 13.72 7.46C13.06 7.02 12.42 7 12.14 7C11.9 7 11.36 7 10.78 7.3C10.28 7.56 9.98 7.9 9.83 8.1C9.24 8.82 9.06 9.63 9 10.06\"></path>\n<path stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M11.99 18H12.01\"></path>\n</svg></span>\n<p class=\"custom-quote-title\">注意</p>\n<p>   我们在提取超像素特征后，还应该给每个超像素打上“1”or“0”的标签，依据是根据该超像素对应于显著性二值图的区域内，“1”or“0”的像素点的数量多少来打标签，哪个数量多就打哪个标签。然后使用合适的比例划分数据集为训练集和验证集（0.8、0.2）。</p>\n</div>\n<h4 id=\"2-神经网络架构：\"><a href=\"#2-神经网络架构：\" class=\"headerlink\" title=\"2.神经网络架构：\"></a>2.神经网络架构：</h4><ul>\n<li>使用较复杂的神经网络架构：<strong>卷积神经网络（CNN）</strong>，来提高模型的学习能力。以下是对应的CNN网络架构：<br><strong>卷积层（Conv1d）：</strong>使用一维卷积提取特征，能够识别超像素的局部结构。<br><strong>池化层（MaxPool1d）：</strong>通过下采样减少特征维度，同时保留重要信息。<br><strong>全连接层（Linear）：</strong>负责将提取到的特征映射到显著性分类。</li>\n<li>训练流程：首先初始化损失函数和Adam优化器。在每个训练周期（10个epoch）内，模型遍历训练集，计算损失并更新权重。在验证集上评估模型性能，记录损失值，打印出相关参数：<br><img src=\"/images/4-7.png\" alt=\"4-7\"></li>\n</ul>\n<p><strong>可以看到指标不是很理想。</strong></p>\n<h3 id=\"2-4-生成显著性图像\"><a href=\"#2-4-生成显著性图像\" class=\"headerlink\" title=\"2.4. 生成显著性图像\"></a>2.4. 生成显著性图像</h3><ol>\n<li><p><strong>生成显著性图：</strong></p>\n<ul>\n<li>将待处理图像的每个超像素的特征向量输入训练好的神经网络。</li>\n<li>神经网络输出的结果为0或1，分别表示该超像素是否显著。</li>\n<li>根据每个超像素的显著性判断，将超像素合并生成显著性二值图，并可视化显示出来：</li>\n</ul>\n</li>\n<li><p><strong>预测图片1：</strong><br><img src=\"/images/4-10.png\" alt=\"4-10\"></p>\n</li>\n<li><p><strong>预测图片2：</strong></p>\n</li>\n</ol>\n<p><img src=\"/images/4-12.png\" alt=\"4-12\"></p>\n<p>可以看到预测效果不是很理想，于是我们采取优化策略。</p>\n<h3 id=\"2-5-基于多尺度的优化策略\"><a href=\"#2-5-基于多尺度的优化策略\" class=\"headerlink\" title=\"2.5. 基于多尺度的优化策略\"></a>2.5. 基于多尺度的优化策略</h3><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p><strong>关键步骤</strong></p>\n<p>基于上述同样的策略，我们改变SLIC划分的超像素的尺度大小(分别<strong>设置参数n_segments&#x3D;70、100、130</strong>以预期生成约既定数量的超像素)，在三种尺度下训练三个神经网络模型，然后将三个模型对应的显著图二值结果求平均值，即可生成更精准的显著性二值图。</p></blockquote>\n<p><strong>经上述操作后，预测图片1、2的效果如下：</strong><br><img src=\"/images/4-11.png\" alt=\"4-11\"></p>\n<p><img src=\"/images/4-9.png\" alt=\"4-9\"></p>\n<p>可以看到还是有比较明显的改进优化的。</p>\n","feature":true,"text":"应用神经网络生成显著性图一、整体思路流程 超像素分割：首先对图像进行SLIC超像素分割。 特征提取：然后对每个超像素进行颜色直方图特征向量提取，同时围绕超像素取...","permalink":"/post/应用神经网络生成显著性图","photos":[],"count_time":{"symbolsCount":"1.8k","symbolsTime":"2 mins."},"categories":[{"name":"计算机视觉","slug":"计算机视觉","count":3,"path":"api/categories/计算机视觉.json"}],"tags":[{"name":"超像素分割","slug":"超像素分割","count":2,"path":"api/tags/超像素分割.json"},{"name":"图像显著性","slug":"图像显著性","count":2,"path":"api/tags/图像显著性.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%BA%94%E7%94%A8%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C%E7%94%9F%E6%88%90%E6%98%BE%E8%91%97%E6%80%A7%E5%9B%BE\"><span class=\"toc-text\">应用神经网络生成显著性图</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%B8%80%E3%80%81%E6%95%B4%E4%BD%93%E6%80%9D%E8%B7%AF%E6%B5%81%E7%A8%8B\"><span class=\"toc-text\">一、整体思路流程</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%BA%8C%E3%80%81%E5%85%B7%E4%BD%93%E5%AE%9E%E7%8E%B0%E6%B5%81%E7%A8%8B\"><span class=\"toc-text\">二、具体实现流程</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-1-%E8%B6%85%E5%83%8F%E7%B4%A0%E5%88%86%E5%89%B2\"><span class=\"toc-text\">2.1. 超像素分割</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-2-%E7%89%B9%E5%BE%81%E6%8F%90%E5%8F%96\"><span class=\"toc-text\">2.2. 特征提取</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-3-%E8%AE%AD%E7%BB%83%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C\"><span class=\"toc-text\">2.3. 训练神经网络</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#1-%E6%95%B0%E6%8D%AE%E5%87%86%E5%A4%87%EF%BC%9A\"><span class=\"toc-text\">1.数据准备：</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#2-%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C%E6%9E%B6%E6%9E%84%EF%BC%9A\"><span class=\"toc-text\">2.神经网络架构：</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-4-%E7%94%9F%E6%88%90%E6%98%BE%E8%91%97%E6%80%A7%E5%9B%BE%E5%83%8F\"><span class=\"toc-text\">2.4. 生成显著性图像</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-5-%E5%9F%BA%E4%BA%8E%E5%A4%9A%E5%B0%BA%E5%BA%A6%E7%9A%84%E4%BC%98%E5%8C%96%E7%AD%96%E7%95%A5\"><span class=\"toc-text\">2.5. 基于多尺度的优化策略</span></a></li></ol></li></ol></li></ol>","author":{"name":"神秘奇男子","slug":"blog-author","avatar":"https://i.ibb.co/b3C0QpT/584-2022101195826670.jpg","link":"/","description":"但凡我有一点办法，我都不至于一点办法没有","socials":{"github":"https://github.com/August618?tab=repositories","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"https://www.zhihu.com/people/august121wsy","csdn":"https://blog.csdn.net/UPCAUG?spm=1011.2124.3001.5343","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/1931947622/favlist?fid=1765359122"},"Gitee":{"icon":"/svg/gitee.svg","link":"https://gitee.com/wu-shanyu-AUG"}}}},"mapped":true,"hidden":false,"prev_post":{},"next_post":{"title":"基于超像素距离的图像显著性分析","uid":"b72467b04a5c6bcacc1ed01fbb7a6241","slug":"基于超像素距离的图像显著性分析","date":"2024-10-07T12:16:07.266Z","updated":"2024-11-04T12:25:11.788Z","comments":true,"path":"api/articles/基于超像素距离的图像显著性分析.json","keywords":null,"cover":"https://uipv4.zywvvd.com:33030/HexoFiles/vvd_file_mt/202207071510708.jpg","text":"任务三：基于超像素距离生成显著性图像​ 首先我先描述一下我的大体实现思路： 1.整体思路流程 超像素分割：使用SLIC算法对图像执行超像素分割，得到分割后的区域...","permalink":"/post/基于超像素距离的图像显著性分析","photos":[],"count_time":{"symbolsCount":"1k","symbolsTime":"1 mins."},"categories":[{"name":"计算机视觉","slug":"计算机视觉","count":3,"path":"api/categories/计算机视觉.json"}],"tags":[{"name":"超像素分割","slug":"超像素分割","count":2,"path":"api/tags/超像素分割.json"},{"name":"图像显著性","slug":"图像显著性","count":2,"path":"api/tags/图像显著性.json"}],"author":{"name":"神秘奇男子","slug":"blog-author","avatar":"https://i.ibb.co/b3C0QpT/584-2022101195826670.jpg","link":"/","description":"但凡我有一点办法，我都不至于一点办法没有","socials":{"github":"https://github.com/August618?tab=repositories","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"https://www.zhihu.com/people/august121wsy","csdn":"https://blog.csdn.net/UPCAUG?spm=1011.2124.3001.5343","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/1931947622/favlist?fid=1765359122"},"Gitee":{"icon":"/svg/gitee.svg","link":"https://gitee.com/wu-shanyu-AUG"}}}},"feature":true}}