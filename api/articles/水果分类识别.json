{"title":"简单的水果分类识别","uid":"3c9c3f4226248e23e6c72e4ac83d74c5","slug":"水果分类识别","date":"2024-09-06T13:41:30.558Z","updated":"2024-09-06T13:50:01.847Z","comments":true,"path":"api/articles/水果分类识别.json","keywords":null,"cover":"https://images.pexels.com/photos/68525/soap-colorful-color-fruit-68525.jpeg?cs=srgb&dl=pexels-pixabay-68525.jpg&fm=jpg","content":"<h1 id=\"任务一：水果分类识别\"><a href=\"#任务一：水果分类识别\" class=\"headerlink\" title=\"任务一：水果分类识别\"></a>任务一：水果分类识别</h1><p>​\t首先我先描述一下我的大体实现思路：</p>\n<h2 id=\"整体思路流程\"><a href=\"#整体思路流程\" class=\"headerlink\" title=\"整体思路流程\"></a>整体思路流程</h2><ol>\n<li><p><strong>特征提取</strong>：从图像中提取两类特征（边界特征和纹理特征），用于描述水果的形状和表面纹理。</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>[!NOTE]</p>\n<p>其中边界特征利用Canny算法提取，然后在图像内部选择感兴趣（ROI）区域进行特征提取，最后都要归一化处理。</p></blockquote>\n</li>\n<li><p><strong>数据准备</strong>：读取数据目录中的图像，提取特征并准备数据集。</p>\n</li>\n<li><p><strong>模型训练</strong>：使用提取的特征数据训练一个逻辑回归模型。</p>\n</li>\n<li><p><strong>单个图像预测</strong>：使用训练好的模型对单个图像进行预测，并输出预测结果。</p>\n</li>\n</ol>\n<h2 id=\"特征提取之边界特征提取\"><a href=\"#特征提取之边界特征提取\" class=\"headerlink\" title=\"特征提取之边界特征提取\"></a>特征提取之边界特征提取</h2><p>​\t通过搜寻相关资料，利用canny进行提取边缘的步骤如下(参考下方代码)：</p>\n<p><strong>1.灰度转换：</strong>将输入的彩色图像转换为灰度图像。<br><strong>2.高斯模糊：</strong>对灰度图像进行高斯模糊处理以减少噪声。<br><strong>3.Canny 边缘检测：</strong>使用 Canny 算法提取图像的边缘。<br><strong>4.轮廓检测：</strong>找到图像中的所有轮廓。<br><strong>5.计算线段长度：</strong>遍历每个轮廓，计算相邻点之间的距离。<br><strong>6.归一化特征：</strong>对所有线段长度进行归一化处理。<br><strong>7.截取特征向量：</strong>只保留前 10 个特征值。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">extract_shape_features</span>(<span class=\"params\">image</span>):</span><br><span class=\"line\">    gray = cv2.cvtColor(image, cv2.COLOR_BGR2GRAY)</span><br><span class=\"line\">    blurred = cv2.GaussianBlur(gray, (<span class=\"number\">5</span>, <span class=\"number\">5</span>), <span class=\"number\">0</span>)</span><br><span class=\"line\">    edges = cv2.Canny(blurred, <span class=\"number\">50</span>, <span class=\"number\">150</span>)</span><br><span class=\"line\">    contours, _ = cv2.findContours(edges, cv2.RETR_EXTERNAL, cv2.CHAIN_APPROX_SIMPLE)</span><br><span class=\"line\"></span><br><span class=\"line\">    shape_features = []</span><br><span class=\"line\">    <span class=\"keyword\">for</span> contour <span class=\"keyword\">in</span> contours:</span><br><span class=\"line\">        <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"built_in\">len</span>(contour) - <span class=\"number\">1</span>):</span><br><span class=\"line\">            length = cv2.norm(contour[i] - contour[i + <span class=\"number\">1</span>])</span><br><span class=\"line\">            shape_features.append(length)</span><br><span class=\"line\"></span><br><span class=\"line\">    shape_features = np.array(shape_features)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> shape_features.size &gt; <span class=\"number\">0</span>:</span><br><span class=\"line\">        shape_features = shape_features / np.linalg.norm(shape_features)</span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        shape_features = np.zeros(<span class=\"number\">10</span>)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> shape_features[:<span class=\"number\">10</span>]</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<h2 id=\"特征提取之纹理特征提取\"><a href=\"#特征提取之纹理特征提取\" class=\"headerlink\" title=\"特征提取之纹理特征提取\"></a>特征提取之纹理特征提取</h2><p>​\t经查询相关资料，纹理特征提取步骤如下（参考下面代码）：</p>\n<ol>\n<li><strong>灰度转换：</strong>将输入的彩色图像转换为灰度图像。</li>\n<li><strong>确定感兴趣区域（ROI）</strong>：在图像中心选取一个较小的区域作为纹理分析的对象。</li>\n<li><strong>计算统计特征：</strong>计算选定区域的均值和标准差。</li>\n<li><strong>归一化特征：</strong>对计算出的特征向量进行归一化处理。</li>\n</ol>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">extract_texture_features</span>(<span class=\"params\">image</span>):</span><br><span class=\"line\"></span><br><span class=\"line\">    gray = cv2.cvtColor(image, cv2.COLOR_BGR2GRAY)</span><br><span class=\"line\">    h, w = gray.shape</span><br><span class=\"line\">    x, y = w // <span class=\"number\">2</span>, h // <span class=\"number\">2</span></span><br><span class=\"line\">    roi = gray[<span class=\"built_in\">max</span>(<span class=\"number\">0</span>, y - <span class=\"number\">5</span>):<span class=\"built_in\">min</span>(h, y + <span class=\"number\">5</span>), <span class=\"built_in\">max</span>(<span class=\"number\">0</span>, x - <span class=\"number\">5</span>):<span class=\"built_in\">min</span>(w, x + <span class=\"number\">5</span>)]</span><br><span class=\"line\"></span><br><span class=\"line\">    mean = np.mean(roi)</span><br><span class=\"line\">    std_dev = np.std(roi)</span><br><span class=\"line\">    texture_features = np.array([mean, std_dev])</span><br><span class=\"line\">    <span class=\"keyword\">if</span> np.linalg.norm(texture_features) &gt; <span class=\"number\">0</span>:</span><br><span class=\"line\">        texture_features = texture_features / np.linalg.norm(texture_features)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> texture_features</span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"数据准备\"><a href=\"#数据准备\" class=\"headerlink\" title=\"数据准备\"></a>数据准备</h2><p>​\t训练的数据集大部分来自百度飞桨的公开数据库，参考链接：<a href=\"https://aistudio.baidu.com/datasetdetail/90377%EF%BC%8C\">https://aistudio.baidu.com/datasetdetail/90377，</a></p>\n<p>​\t还有部分来自谷歌图片上手动下载保存，为了确保特征提取准确、模型预测更精准，我删除了大量较复杂的图片，只保留了简单的、具有单个水果、特征明显的图片，因此最后的图片数量不多。</p>\n<p>​\t为了使数据多样化、尽可能避免过拟合现象，我搜寻了一些简单的数据增强的方法，基于现有的图片数据增生了一些图片。</p>\n<p><img src=\"/images%5C1.png\"></p>\n","feature":true,"text":"任务一：水果分类识别​ 首先我先描述一下我的大体实现思路： 整体思路流程 特征提取：从图像中提取两类特征（边界特征和纹理特征），用于描述水果的形状和表面纹理。 ...","permalink":"/post/水果分类识别","photos":[],"count_time":{"symbolsCount":"2k","symbolsTime":"2 mins."},"categories":[{"name":"机器学习","slug":"机器学习","count":1,"path":"api/categories/机器学习.json"}],"tags":[{"name":"逻辑回归","slug":"逻辑回归","count":1,"path":"api/tags/逻辑回归.json"},{"name":"水果分类","slug":"水果分类","count":1,"path":"api/tags/水果分类.json"},{"name":"计算机视觉","slug":"计算机视觉","count":1,"path":"api/tags/计算机视觉.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E4%BB%BB%E5%8A%A1%E4%B8%80%EF%BC%9A%E6%B0%B4%E6%9E%9C%E5%88%86%E7%B1%BB%E8%AF%86%E5%88%AB\"><span class=\"toc-text\">任务一：水果分类识别</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%95%B4%E4%BD%93%E6%80%9D%E8%B7%AF%E6%B5%81%E7%A8%8B\"><span class=\"toc-text\">整体思路流程</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%89%B9%E5%BE%81%E6%8F%90%E5%8F%96%E4%B9%8B%E8%BE%B9%E7%95%8C%E7%89%B9%E5%BE%81%E6%8F%90%E5%8F%96\"><span class=\"toc-text\">特征提取之边界特征提取</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%89%B9%E5%BE%81%E6%8F%90%E5%8F%96%E4%B9%8B%E7%BA%B9%E7%90%86%E7%89%B9%E5%BE%81%E6%8F%90%E5%8F%96\"><span class=\"toc-text\">特征提取之纹理特征提取</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%95%B0%E6%8D%AE%E5%87%86%E5%A4%87\"><span class=\"toc-text\">数据准备</span></a></li></ol></li></ol>","author":{"name":"神秘奇男子","slug":"blog-author","avatar":"https://i.ibb.co/b3C0QpT/584-2022101195826670.jpg","link":"/","description":"一位旨在梳理所学、分享个人经验的入门级菜坤","socials":{"github":"https://github.com/August618?tab=repositories","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"https://www.zhihu.com/people/august121wsy","csdn":"https://blog.csdn.net/UPCAUG?spm=1011.2124.3001.5343","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/1931947622/favlist?fid=1765359122"},"Gitee":{"icon":"/svg/gitee.svg","link":"https://gitee.com/wu-shanyu-AUG"}}}},"mapped":true,"hidden":false,"prev_post":{},"next_post":{"title":"Haar 特征分类器实现人脸识别","uid":"dc76bdb116b22b7d8e614c5e499a6c3f","slug":"基于OpenCV 的 Haar 特征分类器实现人脸检测与显示","date":"2024-08-24T06:37:38.807Z","updated":"2024-09-06T13:47:27.165Z","comments":true,"path":"api/articles/基于OpenCV 的 Haar 特征分类器实现人脸检测与显示.json","keywords":null,"cover":"https://ogre.natalie.mu/media/news/music/2024/0306/ILLIT0306_all1.jpg?impolicy=twitter_card_face_crop","text":"基于OpenCV 的 Haar 特征分类器实现人脸检测与显示在计算机视觉领域，人脸检测是非常基础而且常用的技术，最近刚好在学计算机视觉的相关知识，学到人脸识别时...","permalink":"/post/基于OpenCV 的 Haar 特征分类器实现人脸检测与显示","photos":[],"count_time":{"symbolsCount":"1.8k","symbolsTime":"2 mins."},"categories":[{"name":"计算机视觉","slug":"计算机视觉","count":1,"path":"api/categories/计算机视觉.json"}],"tags":[{"name":"OpenCV","slug":"OpenCV","count":1,"path":"api/tags/OpenCV.json"},{"name":"人脸识别","slug":"人脸识别","count":1,"path":"api/tags/人脸识别.json"}],"author":{"name":"神秘奇男子","slug":"blog-author","avatar":"https://i.ibb.co/b3C0QpT/584-2022101195826670.jpg","link":"/","description":"一位旨在梳理所学、分享个人经验的入门级菜坤","socials":{"github":"https://github.com/August618?tab=repositories","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"https://www.zhihu.com/people/august121wsy","csdn":"https://blog.csdn.net/UPCAUG?spm=1011.2124.3001.5343","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/1931947622/favlist?fid=1765359122"},"Gitee":{"icon":"/svg/gitee.svg","link":"https://gitee.com/wu-shanyu-AUG"}}}},"feature":true}}